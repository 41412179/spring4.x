/**
 * AspectJ切点函数：
 * 1. @annotation() 表示标注了某个注解的所有方法
 * 2. execution(<修饰符模式>? <返回类型模式> <方法名模式>(<参数模式>) <异常模式>?)
 *    除了返回类型模式，方法名模式，参数模式外，其它项是可选的。当..出现在类名中时，后面必须跟*，表示包、子孙包下所有类
 * 3. args() 该函数接收一个类名，表示目标方法入参对象是指定类(包含子类)时，切点匹配
 * 4. @args() 该函数接受一个注解类的类名，当方法的运行时入参对象标注了指定的注解时，匹配切点。
 * 5. within(<类匹配模式>) 通过类匹配模式串声明切点，所指定的连接点最小范围只能是类
 * 6. @within(M) 和 @target(M) 只接受注解类名作为入参。@target(M)匹配任意标注了@M的目标类；@within(M)匹配标注了@M的类及子孙类
 * 7. target(M) 表示如果目标类按类型匹配于M，则目标类的所有方法都匹配切点
 * 8. this()通过判断代理类是否按类型匹配指定类来决定是否和切点匹配
 */
package com.smart.aspectj.fun;