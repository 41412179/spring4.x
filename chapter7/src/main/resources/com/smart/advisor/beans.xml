<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="waiterTarget" class="com.smart.advisor.Waiter"/>
    <bean id="sellerTarget" class="com.smart.advisor.Seller"/>
    <bean id="greetingAdvice" class="com.smart.advisor.GreetingBeforeAdvice"/>
    <!--向切面注入一个前置增强-->
    <bean id="greetingAdvisor" class="com.smart.advisor.GreetingAdvisor"
          p:advice-ref="greetingAdvice"/>

    <!--通过一个父<bean>定义公共的配置信息-->
    <bean id="parent" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="greetingAdvisor"
          p:proxyTargetClass="true"/>

    <!--waiter代理-->
    <bean id="waiter" parent="parent" p:target-ref="waiterTarget"/>
    <!--seller代理-->
    <bean id="seller" parent="parent" p:target-ref="sellerTarget"/>

    <!--RegexMethodPointcutAdvisor是正则表达式方法匹配的切面实现类，功能齐备，一般无需扩展-->
    <bean id="regexAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
          p:advice-ref="greetingAdvice">
        <!--用正则表达式定义目标类全限定方法名的匹配模式串-->
        <property name="patterns">
            <list>
                <value>.*greet.*</value>
            </list>
        </property>
    </bean>
    <bean id="waiter1" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="regexAdvisor"
          p:target-ref="waiterTarget"
          p:proxyTargetClass="true"/>

    <bean id="dynamicAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <!--注入动态切点-->
        <property name="pointcut">
            <bean class="com.smart.advisor.GreetingDynamicPointcut"/>
        </property>
        <property name="advice" ref="greetingAdvice"/>
    </bean>
    <bean id="waiter2" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyTargetClass="true"
          p:interceptorNames="dynamicAdvisor"
          p:target-ref="waiterTarget"/>

    <!-- 所有由WaiterDelegate#service()方法发起调用的其他方法都织入GreetingBeforeAdvice增强 -->
    <bean id="controlFlowPointcut" class="org.springframework.aop.support.ControlFlowPointcut">
        <!--  指定流程切点的类 -->
        <constructor-arg type="java.lang.Class"
                         value="com.smart.advisor.WaiterDelegate"/>
        <!-- 指定流程切点的方法 -->
        <constructor-arg type="java.lang.String" value="service"/>
    </bean>
    <!-- 流程切面 -->
    <bean id="controlFlowAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
          p:pointcut-ref="controlFlowPointcut"
          p:advice-ref="greetingAdvice"/>
    <bean id="waiter3" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="controlFlowAdvisor"
          p:target-ref="waiterTarget"
          p:proxyTargetClass="true"/>

    <bean id="gcp" class="com.smart.advisor.GreetingComposablePointcut"/>
    <!-- 引用gcp.getIntersectionPointcut()方法返回的复合切点 -->
    <bean id="composableAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
          p:pointcut= "#{gcp.intersectionPointcut}"
          p:advice-ref="greetingAdvice"/>
    <!-- 使用复合切点切面 -->
    <bean id="waiter4" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="composableAdvisor"
          p:target-ref="waiterTarget"
          p:proxyTargetClass="true"/>

    <!--引介切面-->
    <bean id="introduceAdvisor" class="org.springframework.aop.support.DefaultIntroductionAdvisor">
        <!-- 这是一个Advice对象 -->
        <constructor-arg>
            <bean class="com.smart.introduce.ControllablePerformanceMonitor"/>
        </constructor-arg>
    </bean>
    <bean id="forumServiceTarget" class="com.smart.introduce.ForumService"/>
    <bean id="forumService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyTargetClass" value="true"/>
        <property name="interceptorNames" value="introduceAdvisor"/>
        <property name="targetName" value="forumServiceTarget"/>
    </bean>
</beans>